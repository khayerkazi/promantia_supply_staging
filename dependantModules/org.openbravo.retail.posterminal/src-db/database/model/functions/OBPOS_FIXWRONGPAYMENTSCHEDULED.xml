<?xml version="1.0"?>
  <database name="FUNCTION OBPOS_FIXWRONGPAYMENTSCHEDULED">
    <function name="OBPOS_FIXWRONGPAYMENTSCHEDULED" type="NULL">
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
      cur_wrongorders RECORD;
  Cur_RolesAlert RECORD;
  varInvoiceId varchar(32);
  v_needToExecute NUMBER;
  existsClosedPeriod NUMBER;
  varIsPosted CHAR(1);
  existsAlertRule NUMBER;
  
  varALERT_RULE_SQL varchar(2000) := 'select o2.c_order_id as referencekey_id, ad_column_identifier(''C_Order'', o2.c_order_id, ''en_US'') as record_id , 0 as ad_role_id, null as ad_user_id, 
																			''Wrong Payment Plan in sales order generated by POS'' as description, ''Y'' as isactive, o2.ad_org_id, o2.ad_client_id, now() as created, 0 as createdBy, now() as updated, 0 as updatedBy 
																			from c_order o2
																			where o2.c_order_id in (select o.c_order_id
																			from fin_payment_scheduledetail sd, 
																					 fin_payment_schedule s left join c_invoice i on s.c_invoice_id = i.c_invoice_id
																						left join c_order o on s.c_order_id = o.c_order_id
																			where sd.fin_payment_schedule_order = s.fin_payment_schedule_id
																			and s.outstandingamt =0
																			and s.amount<>0
																			and o.em_obpos_applications_id is not null
																			group by sd.fin_payment_schedule_order, s.amount, i.documentno, o.documentno, s.outstandingamt, o.c_order_id
																			having abs(s.amount- sum(sd.amount)) > 1)';
  varPOSTERMINAL_WINDOW varchar(255) := 'FF80818132F311740132F322B8CD0048';
  varORDER_TAB varchar(255) := '186';
  varALERT_RULE varchar(255) :='Wrong Payment Plan in sales order generated by POS';
  varAlertRuleId varchar(32) ;

BEGIN

  SELECT COUNT(1) INTO v_needToExecute
  FROM ad_preference
  WHERE attribute = 'obpos_fixissuepayments';
  

  IF (v_needToExecute > 0) THEN
    DBMS_OUTPUT.PUT_LINE('skip obpos_fixissuepayments. Already executed - ' || v_needToExecute);
    RETURN;
  END IF;

  DBMS_OUTPUT.PUT_LINE('Fixing wrong data because off issue payments');

  FOR cur_wrongorders IN (
			select -- s.amount, sum(sd.amount), i.documentno, o.documentno, s.outstandingamt,  
			sd.fin_payment_schedule_order as fin_payment_schedule_order, o.c_order_id as c_order_id, o.documentno, o.ad_org_id, o.ad_client_id
			from fin_payment_scheduledetail sd, 
				fin_payment_schedule s left join c_invoice i on s.c_invoice_id = i.c_invoice_id
						      left join c_order o on s.c_order_id = o.c_order_id
			where sd.fin_payment_schedule_order = s.fin_payment_schedule_id
			and s.outstandingamt =0
			and s.amount<>0
			and o.em_obpos_applications_id is not null
      and not exists (select 1 from c_orderline ol where ol.c_order_id = o.c_order_id and ol.qtyordered <> ol.qtydelivered)
			group by sd.fin_payment_schedule_order, s.amount, i.documentno, o.documentno, s.outstandingamt, o.c_order_id, o.ad_org_id, o.ad_client_id
			having abs(s.amount- sum(sd.amount)) > 1) LOOP

			select max(c_invoice_id) into varInvoiceId from c_invoiceline where c_orderline_id in (select c_orderline_id from c_orderline where c_order_id =cur_wrongorders.c_order_id);
			select posted into varIsPosted from c_invoice where c_invoice_id= varInvoiceId;


			SELECT count(1) into existsClosedPeriod
			FROM ad_org o, c_invoice i, c_doctype t 
			WHERE i.c_invoice_id= varInvoiceId
			and o.ad_client_id= i.ad_client_id
			and i.c_doctype_id = t.c_doctype_id
			AND AD_ISORGINCLUDED(i.ad_org_id, o.ad_org_id, o.ad_client_id)<>-1
			AND EXISTS
					(SELECT 1
					FROM C_YEAR, C_PERIOD, C_PERIODCONTROL
					WHERE C_YEAR.c_year_id=C_PERIOD.c_year_id
						AND C_PERIOD.c_period_id=C_PERIODCONTROL.c_period_id
						AND C_YEAR.c_calendar_id=(select c_calendar_id from ad_org o2 where o2.ad_org_id = ad_org_getcalendarowner(o.ad_org_id))
						AND C_PERIODCONTROL.docbasetype=t.DOCBASETYPE
						AND C_PERIODCONTROL.periodstatus<>'O'
						AND ((i.DATEACCT>=C_PERIOD.StartDate AND i.DATEACCT<C_PERIOD.EndDate + 1 ))
						AND C_PeriodControl.AD_Org_ID=ad_org_getperiodcontrolallow(o.AD_Org_ID));

			if (existsClosedPeriod>0 AND varIsPosted='Y') then			
        SELECT COUNT(1) INTO existsAlertRule
        FROM AD_ALERTRULE
        WHERE NAME = varALERT_RULE;

        IF (existsAlertRule=0) THEN
          varAlertRuleId := get_uuid();
					INSERT INTO AD_ALERTRULE  
					(AD_ALERTRULE_ID, AD_CLIENT_ID, AD_ORG_ID,ISACTIVE,CREATED, CREATEDBY,  UPDATED, UPDATEDBY,NAME, AD_TAB_ID, FILTERCLAUSE, TYPE, SQL) 
					VALUES (varAlertRuleId, cur_wrongorders.ad_client_id, cur_wrongorders.ad_org_id, 'Y', now(), '0', now(), '0', varALERT_RULE, varORDER_TAB, null, 'D', varALERT_RULE_SQL);

          FOR Cur_RolesAlert IN (SELECT distinct ad_role_id FROM ad_window_access WHERE ad_window_id = varPOSTERMINAL_WINDOW AND AD_CLIENT_ID = cur_wrongorders.ad_client_id AND ISACTIVE = 'Y') LOOP
						INSERT INTO ad_alertrecipient(
								    ad_user_id, ad_client_id, ad_org_id, isactive, created, createdby, 
								    updated, updatedby, ad_alertrecipient_id, ad_alertrule_id, ad_role_id, 
								    sendemail)
						VALUES (null, cur_wrongorders.ad_client_id, cur_wrongorders.ad_org_id, 'Y', now(), '100', now(), '100', get_uuid(), varAlertRuleId, Cur_RolesAlert.ad_role_id, 'N');
          END LOOP;
        END IF;

        SELECT AD_ALERTRULE_ID INTO varAlertRuleId from AD_ALERTRULE WHERE NAME =varALERT_RULE;

			  INSERT INTO AD_Alert (AD_Alert_ID, AD_Client_ID, AD_Org_ID, IsActive,Created, CreatedBy, Updated, UpdatedBy,Description, AD_AlertRule_ID, Record_Id, Referencekey_ID) 
        VALUES (get_uuid(), cur_wrongorders.ad_client_id, cur_wrongorders.ad_org_id, 'Y',now(), '0', now(), '0', varALERT_RULE || '. For more detail: http://wiki.openbravo.com/wiki/Retail:Known_Issues#Problem_in_cash_up_of_receipts_with_more_than_one_payment_type', varAlertRuleId, 
				ad_column_identifier('C_Order', cur_wrongorders.c_order_id, 'en_US'), cur_wrongorders.c_order_id);   
			else 

				delete from fin_payment_scheduledetail
				where fin_payment_schedule_order = cur_wrongorders.fin_payment_schedule_order
				and fin_payment_detail_id is null;
	
				update fin_payment_schedule  s 
				set amount = (select sum(amount+writeoffamt) from fin_payment_scheduledetail  sd where sd.fin_payment_schedule_invoice = s.fin_payment_schedule_id and iscanceled='N' ),
				paidamt = (select sum(amount+writeoffamt) from fin_payment_scheduledetail  sd where sd.fin_payment_schedule_invoice = s.fin_payment_schedule_id  and iscanceled='N') 
				where s.c_invoice_id =varInvoiceId ;   
	
				UPDATE C_ORDER SET description = coalesce(to_char(description), '') || '-updated by mod.script' WHERE C_ORDER_ID=cur_wrongorders.C_ORDER_ID;

				if (varIsPosted='Y') THEN
   				delete from fact_acct fa
		   		where fa.record_id = varInvoiceId
				  and fa.ad_table_id = '318';

					update c_invoice set posted='N'
          where c_invoice_id= varInvoiceId;
				END IF;
			 
				DBMS_OUTPUT.PUT_LINE('fixed order - ' || cur_wrongorders.documentno); 
			end if;
  END LOOP;

  INSERT INTO ad_preference (ad_preference_id, ad_client_id, ad_org_id, isactive, createdby, created, updatedby, updated, attribute) 
    VALUES ( get_uuid(), '0', '0', 'Y', '0', now(), '0', now(), 'obpos_fixissuepayments' );
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error fixing data of issue fixissuepayments');
END OBPOS_FIXWRONGPAYMENTSCHEDULED
]]></body>
    </function>
  </database>
