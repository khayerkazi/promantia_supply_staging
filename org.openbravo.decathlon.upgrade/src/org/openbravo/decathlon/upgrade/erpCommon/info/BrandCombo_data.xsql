<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SLU 
 * All portions are Copyright (C) 2001-2006 Openbravo SLU 
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->





<SqlClass name="BrandComboData" package="org.openbravo.decathlon.upgrade.erpCommon.info">
   <SqlClassComment></SqlClassComment>
   <SqlMethod name="select" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
        SELECT CL_Brand.CL_Brand_ID, CL_Brand.Name AS Name 
        FROM CL_Brand
        WHERE CL_Brand.IsActive='Y' 
        AND CL_Brand.AD_Client_ID = ? 
        ORDER BY CL_Brand.Name
      </Sql>
      <!--<Parameter name="rol"/>-->
      <Parameter name="client"/>
   </SqlMethod>
   <SqlMethod name="selectFilter" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
        SELECT CL_Brand_ID, Name AS Name 
        FROM CL_Brand 
        WHERE IsActive='Y' 
        AND AD_Client_ID IN ('1') 
        ORDER BY Name
      </Sql>
      <Parameter name="adUserClient" type="replace" optional="true" after="AD_Client_ID IN (" text="'1'"/>
   </SqlMethod>
   <SqlMethod name="isRoleClientBrand" type="preparedStatement" return="Boolean" default="false">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
        SELECT COUNT(*) AS TOTAL
        FROM CL_Brand
        WHERE CL_Brand.IsActive='Y' 
         AND CL_Brand.AD_Client_ID = ? 
        AND CL_Brand.CL_Brand_ID = ?
      </Sql>
      <!--<Parameter name="rol"/>-->
      <Parameter name="client"/>
      <Parameter name="brand"/>
   </SqlMethod>
</SqlClass>
