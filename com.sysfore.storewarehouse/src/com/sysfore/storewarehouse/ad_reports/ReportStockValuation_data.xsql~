<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License.
 * The Original Code is Openbravo ERP.
 * The Initial Developer of the Original Code is Openbravo SLU
 * All portions are Copyright (C) 2001-2006 Openbravo SLU
 * All Rights Reserved.
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->


<SqlClass name="ReportStockValuationData" package="com.sysfore.storewarehouse.ad_reports">
  <SqlClassComment></SqlClassComment>
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[  
	    select distinct p.NAME as Product,A.QTY as Quantity,b.name as Brand,
            (pp.em_cl_ccunitprice * A.QTY) as CCUnitPrice,
            (pp.em_cl_cessionprice * A.QTY) as CessionPrice
            FROM (SELECT M_PRODUCT_ID, SUM(MOVEMENTQTY) AS QTY FROM M_TRANSACTION, M_LOCATOR
                  WHERE M_TRANSACTION.M_LOCATOR_ID = M_LOCATOR.M_LOCATOR_ID
                  AND M_TRANSACTION.MOVEMENTDATE <= to_date(?)
                  GROUP BY M_PRODUCT_ID) A,
                  m_product p
            left join m_productprice pp on (p.m_product_id=pp.m_product_id) 
            inner join cl_model m on (m.cl_model_id=p.em_cl_model_id)
            inner join cl_brand b on (b.cl_brand_id=m.cl_brand_id)
            inner join m_pricelist_version plv on (plv.m_pricelist_version_id=pp.m_pricelist_version_id)            
            where A.M_PRODUCT_ID = p.M_PRODUCT_ID
             AND p.isActive='Y' and plv.name like '%Catalog%'
            AND 1=1
            group by p.name, A.QTY, p.name,b.name
            order by p.name

     ]]></Sql>
     <Field name="rownum" value="count"/>
      <Parameter name="date"/>
      <Parameter name="Product" optional="true" after="AND 1=1"><![CDATA[ AND p.m_product_id = ? ]]></Parameter>
      <Parameter name="Model" optional="true" after="AND 1=1"><![CDATA[ AND m.cl_model_id = ? ]]></Parameter>
      <Parameter name="Brand" optional="true" after="AND 1=1"><![CDATA[ AND b.cl_brand_id = ? ]]></Parameter>

     <!--
           inner join m_storage_detail sd on (sd.m_product_id=p.m_product_id)
 <Parameter name="adUserClient" type="replace" optional="true" after="p.AD_Client_ID IN (" text="'1'"/>
      <Parameter name="adUserOrg" type="replace" optional="true" after="p.AD_Org_ID IN (" text="'1'"/>
 AND p.AD_Client_ID IN ('1')
            AND p.AD_Org_ID IN ('1')
<Parameter name="dateFrom" optional="true" after="AND 1=1"><![CDATA[AND t.movementdate >= to_date(?)]]></Parameter>
      <Parameter name="dateTo" optional="true" after="AND 1=1"><![CDATA[AND t.movementdate < to_date(?)]]></Parameter>      -->


  </SqlMethod>

 <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql></Sql>
  </SqlMethod>
</SqlClass>
