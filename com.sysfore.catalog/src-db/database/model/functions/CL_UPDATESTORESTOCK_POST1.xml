<?xml version="1.0"?>
  <database name="FUNCTION CL_UPDATESTORESTOCK_POST1">
    <function name="CL_UPDATESTORESTOCK_POST1" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL
* All portions are Copyright (C) 2001-2006 Openbravo SL
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32):='0';
  v_DocAction VARCHAR2(60);
  v_DocStatus VARCHAR2(60);
  v_ReqStatus VARCHAR(60);
  v_MovementType VARCHAR(60);
  v_Aux NUMBER;
  v_Client_ID VARCHAR(32);
  v_Org_ID VARCHAR(32);
  v_MoveDate DATE;
  NextNo VARCHAR(32);
  --  Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    Cur_StoreStock RECORD;
BEGIN
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
  v_ResultStr:='PInstanceNotFound';
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, i.AD_User_ID, i.AD_Client_ID, i.AD_Org_ID,
        p.ParameterName, p.P_String, p.P_Number, p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo) LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_User_ID:=Cur_Parameter.AD_User_ID;
    END LOOP; -- Get Parameter

    
    v_ResultStr := 'cl_storestock' || v_Record_ID || ', MovementType=' || v_MovementType || ', created=' ||  v_MoveDate;

    /**
    * Check if requisition has lines
    */
   /* IF (v_DocAction = 'CO') THEN
      SELECT COUNT(*)
        INTO v_Aux
      FROM sw_sreqline
      WHERE sw_srequisition_ID = v_Record_ID;
      IF v_Aux=0 THEN
        RAISE_APPLICATION_ERROR(-20000, '@RequisitionWithoutLines@');
      END IF;
    END IF;*/

     /* SELECT DocStatus,DocAction,RequisitionStatus INTO v_DocAction1, v_DocStatus1 ,v_ReqStatus1 FROM cl_storestock
      WHERE cl_storestock_ID = v_Record_ID;*/
     --LOOP TO INSERT PRODUCT FROM EXISTING WAREHOUSE TO DEFAULT WAREHOUSE FOR STORES RETURN
     SELECT MovementType, created INTO v_MovementType, v_MoveDate 
    FROM cl_storestock
    WHERE cl_storestock_ID = v_Record_ID;

        FOR Cur_StoreStock IN
          (SELECT *  FROM cl_storestock  WHERE cl_storestock_id=v_Record_ID)
        LOOP 
         -- v_ResultStr:='Transaction for line' || Cur_IrLine.Line;         
        
          AD_Sequence_Next('M_Transaction', v_Client_ID, NextNo) ;
        INSERT
        INTO M_Transaction
          (
            M_Transaction_ID, AD_Client_ID, AD_Org_ID, IsActive,
            Created, CreatedBy, Updated, UpdatedBy,
            MovementType, M_Locator_ID, M_Product_ID, 
            MovementDate, MovementQty, em_cl_storestock_id, C_UOM_ID
          )
          VALUES
          (
            NextNo, Cur_StoreStock.AD_Client_ID, Cur_StoreStock.AD_Org_ID, 'Y',
            now(), '100', now(), '100',
            'PI+', '1000000', Cur_StoreStock.M_Product_ID, 
            v_MoveDate, Cur_StoreStock.StoreStock,Cur_StoreStock.cl_storestock_id, '100'
          );
       
        END LOOP;
       --END IF;
  
    --END IF;   
  END; --BODY
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('lp_irrequsition_Post error: ' || v_ResultStr);
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr);
END CL_UPDATESTORESTOCK_POST1
]]></body>
    </function>
  </database>
